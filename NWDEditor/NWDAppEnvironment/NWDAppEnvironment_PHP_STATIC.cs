//=====================================================================================================================
//
// ideMobi copyright 2019
// All rights reserved by ideMobi
//
// Read License-en or Licence-fr
//
//=====================================================================================================================
#if UNITY_EDITOR
using System.Collections.Generic;
using System.Text;
//=====================================================================================================================
namespace NetWorkedData
{
    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    public partial class NWDAppEnvironment
    {
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticAccountFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// ACCOUNT");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("$ereg_appname = '/^(.*)$/';");
            tFile.AppendLine("$ereg_facebook = '/^(.*)$/';");
            tFile.AppendLine("$ereg_google = '/^(.*)$/';");
            tFile.AppendLine("$ereg_unity = '/^(.*)$/';");
            tFile.AppendLine("$ereg_twitter = '/^(.*)$/';");
            tFile.AppendLine("$ereg_social_force = '/^(yes|no)$/';");
            tFile.AppendLine("$ereg_action = '/^(signanonymous|rescue|session|signin|signup|signout|modify|reinitialize|delete|facebook|twitter|google|unity|joker|google_remove|facebook_remove)$/';");
            tFile.AppendLine("$ereg_email = '/^([A-Z0-9a-z\\.\\_\\%\\+\\-]+@[A-Z0-9a-z\\.\\_\\%\\+\\-]+\\.[A-Za-z]{2,6})$/';");
            tFile.AppendLine("$ereg_password = '/^(.{24,64})$/';");
            tFile.AppendLine("$ereg_emailHash = '/^(.{24,64})$/';");
            tFile.AppendLine("$ereg_auuidHash = '/^([A-Za-z0-9\\-]{15,48})$/';");
            tFile.AppendLine("$ereg_apasswordHash = '/^(.{12,64})$/';");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("if (!errorDetected())");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('action', 'action', $ereg_action, 'ACC01', 'ACC02')) // test if action is valid");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($action == 'rescue')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('emailrescue', 'emailrescue', $ereg_email, 'ACC10', 'ACC40')) // I test emailrescue");
            tFile.AppendLine("{");
            tFile.AppendLine("$emailhash = sha1 ($emailrescue.$NWD_SLT_STR);");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDAccount` WHERE `Email` = \\''.$SQL_CON->real_escape_string($emailhash).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN70');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// unknow user");
            tFile.AppendLine("error('SGN71');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('rescue',true);");
            tFile.AppendLine("$s = sha1($TIME_SYNC.$emailrescue.$NWD_SLT_SRV);");
            tFile.AppendLine("// ok I have one user");
            tFile.AppendLine("//TODO: send an email and process to change the password");
            tFile.AppendLine("$tQueryC = 'UPDATE `'.$ENV.'_NWDAccount` SET `ServerHash` = \\''.$s.'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($tRow['Reference']).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResultC = $SQL_CON->query($tQueryC);");
            tFile.AppendLine("if (!$tResultC)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN03');");
            tFile.AppendLine("}");
            tFile.AppendLine("$tResetURL = $HTTP_URL.'/'.$ENV.'/" + NWD.K_RESCUE_PHP + "?lang='.$lang.'&s='.$s.'&emailrescue='.$emailrescue;");
            tFile.AppendLine("$tError = errorReference('ERR-RESCUE-01');");
            tFile.AppendLine("if (isset($tError['Title']))");
            tFile.AppendLine("{");
            tFile.AppendLine("$subject = str_replace(\"{APP}\",$NWD_APP_NAM, GetLocalizableString($tError['Title'], $lang));");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$subject = $NWD_APP_NAM.': forgotten password';");
            tFile.AppendLine("}");
            tFile.AppendLine("if (isset($tError['Description']))");
            tFile.AppendLine("{");
            tFile.AppendLine("$message = str_replace(\"{URL}\",$tResetURL,str_replace(\"{APP}\",$NWD_APP_NAM,GetLocalizableString($tError['Description'], $lang)));");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$message = \"Hello,\\n\\r\\n\\r\";");
            tFile.AppendLine("$message.= \"You have requested to reset your password for the \".$NWD_APP_NAM.\" application.\\n\\r\";");
            tFile.AppendLine("$message.= \"If this request does not emanate from your action, ignore this email.\\n\\r\";");
            tFile.AppendLine("$message.= \"If you wish to reset your password, click on the link below:\\n\\r\";");
            tFile.AppendLine("$message.= \"\\n\\r\".$tResetURL.\"\\n\\r\\n\\r\";");
            tFile.AppendLine("$message.= \"Best regards,\\n\\r\";");
            tFile.AppendLine("$message.= \"The \".$NWD_APP_NAM.\" team\";");
            tFile.AppendLine("}");
            tFile.AppendLine("include('Mail.php');");
            tFile.AppendLine("$headers['From'] = $SMTP_REPLY;");
            tFile.AppendLine("$headers['To'] = $emailrescue;");
            tFile.AppendLine("$headers['Subject'] =$subject;");
            tFile.AppendLine("$params['sendmail_path'] = '/usr/lib/sendmail';");
            tFile.AppendLine("// Create the mail object using the Mail::factory method");
            tFile.AppendLine("$mail_object = Mail::factory('smtp', array ('host' => $SMTP_HOST, 'auth' => true, 'username' => $SMTP_USER, 'password' => $SMTP_PSW));");
            tFile.AppendLine("$mail_object->send($emailrescue, $headers, $message);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this email … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("// to much users ...");
            tFile.AppendLine("error('SGN72');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- SESSION TEST ----");
            tFile.AppendLine("// I test session is ok");
            tFile.AppendLine("if ($action == 'session')");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I create a permanent account if temporary before");
            tFile.AppendLine("// AccountAnonymeGenerate(); // Did in request file");
            tFile.AppendLine("// I have a valid account anyway now");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDAccount` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN80');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// unknow user");
            tFile.AppendLine("error('SGN81');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// ok I have one user");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('session',true);");
            tFile.AppendLine("if ($tRow['Ban'] > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$ban=true;");
            tFile.AppendLine("error('ACC99');");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($tRow['Email']!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('sign','loginpassword');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tRow['FacebookID']!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('sign','facebook');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tRow['GoogleID']!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('sign','google');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('sign','anonymous');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this email … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("// to much users ...");
            tFile.AppendLine("error('SGN82');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- SIGN IN ----");
            tFile.AppendLine("// I sign in with the good value");
            tFile.AppendLine("if ($action == 'signin')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('email', 'email', $ereg_emailHash, 'ACC10', 'ACC40')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('password', 'password', $ereg_password, 'ACC11', 'ACC41')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("// I get the password uuid hash");
            tFile.AppendLine("$tQuery = 'SELECT `Reference`, `Ban` FROM `'.$ENV.'_NWDAccount` WHERE `Email` = \\''.$SQL_CON->real_escape_string($email).'\\' AND `Password` = \\''.$SQL_CON->real_escape_string($password).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('SGN15');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// unknow user");
            tFile.AppendLine("error('SGN16');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// ok I have one user");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Ban'] > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$ban = true;");
            tFile.AppendLine("error('ACC98');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("AccountIsSigned();");
            tFile.AppendLine("if ($uuid != $tRow['Reference'])");
            tFile.AppendLine("{");
            tFile.AppendLine("respondNeedReloadData();");
            tFile.AppendLine("respondUUID($tRow['Reference']);");
            tFile.AppendLine("respondAdd('signin',true);");
            tFile.AppendLine("respondAdd('sign','loginpassword');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN17');");
            tFile.AppendLine("}");
            tFile.AppendLine("$uuid = $tRow['Reference'];");
            tFile.AppendLine("$token = NWDRequestTokenReset ($uuid); // reset connexion to zero");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this email … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("// to much users ...");
            tFile.AppendLine("error('SGN18');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- SIGN UP ----");
            tFile.AppendLine("// I sign up with the good value");
            tFile.AppendLine("if ($action == 'signup')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('email', 'email', $ereg_emailHash, 'ACC10', 'ACC40')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('password', 'password', $ereg_password, 'ACC11', 'ACC41')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('password_confirm', 'password_confirm', $ereg_password, 'ACC12', 'ACC42')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($password == $password_confirm)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I create a permanent accpunt if temporary before");
            tFile.AppendLine("// AccountAnonymeGenerate(); // Did in request file");
            tFile.AppendLine("// I have a valid account anyway now");
            tFile.AppendLine("if ($ban == false)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I register this account");
            tFile.AppendLine("$tQuery = 'SELECT `Reference` FROM `'.$ENV.'_NWDAccount` WHERE `Email` = \\''.$SQL_CON->real_escape_string($email).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN01');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQueryB = 'SELECT `Reference`,`Email`,`Password` FROM `'.$ENV.'_NWDAccount` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResultB = $SQL_CON->query($tQueryB);");
            tFile.AppendLine("if (!$tResultB)");
            tFile.AppendLine("{");
            tFile.AppendLine("errorInfos('SGN02',$tQueryB);");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResultB->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tRow = $tResultB->fetch_array();");
            tFile.AppendLine("if ($tRow['Email']=='' && $tRow['Password']=='')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInternalKey = '';");
            tFile.AppendLine("$tInternalDescription = '';");
            tFile.AppendLine("if ($ENV == 'Dev')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInternalKey = ''.$email.'';");
            tFile.AppendLine("$tInternalDescription = 'dev account';");
            tFile.AppendLine("}");
            tFile.AppendLine("$tQueryC = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `Email` = \\''.$SQL_CON->real_escape_string($email).'\\', `Password` = \\''.$SQL_CON->real_escape_string($password).'\\', `InternalKey` = \\''.$SQL_CON->real_escape_string($tInternalKey).'\\', `InternalDescription` = \\''.$SQL_CON->real_escape_string($tInternalDescription).'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `AC` = 1;'; // AND `Email` = \\'\\' AND `Password` = \\'\\'");
            tFile.AppendLine("$tResultC = $SQL_CON->query($tQueryC);");
            tFile.AppendLine("if (!$tResultC)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN03');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("$token = NWDRequestTokenReset ($tRow['Reference']); // reset connexion to zero");
            tFile.AppendLine("respondAdd('signup',true);");
            tFile.AppendLine("respondAdd('sign','loginpassword');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN04');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN05');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Reference'] == $uuid)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN06');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN07');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this email … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN08');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC22');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- MODIFY ----");
            tFile.AppendLine("// I modifiy with the good value");
            tFile.AppendLine("if ($action == 'modify')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('email', 'email', $ereg_emailHash, 'ACC10', 'ACC40')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('old_password', 'old_password', $ereg_password, 'ACC13', 'ACC43')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('new_password', 'new_password', $ereg_password, 'ACC14', 'ACC44')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('password_confirm', 'password_confirm', $ereg_password, 'ACC12', 'ACC42')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($new_password == $password_confirm)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I create a permanent accpunt if temporary before");
            tFile.AppendLine("// AccountAnonymeGenerate();");
            tFile.AppendLine("// I have a valid account anyway now");
            tFile.AppendLine("if ($ban == false)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT `Reference` FROM `'.$ENV.'_NWDAccount` WHERE `Email` = \\''.$SQL_CON->real_escape_string($email).'\\' AND `Reference` != \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN13');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN14');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQueryB = 'SELECT `Reference` FROM `'.$ENV.'_NWDAccount` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `Password` = \\''.$SQL_CON->real_escape_string($old_password).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResultB = $SQL_CON->query($tQueryB);");
            tFile.AppendLine("if (!$tResultB)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN09');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResultB->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN10');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResultB->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInternalKey = '';");
            tFile.AppendLine("$tInternalDescription = '';");
            tFile.AppendLine("if ($ENV == 'Dev')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInternalKey = ''.$email.'';");
            tFile.AppendLine("$tInternalDescription = 'dev account';");
            tFile.AppendLine("}");
            tFile.AppendLine("$tQueryC = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `Email` = \\''.$SQL_CON->real_escape_string($email).'\\', `Password` = \\''.$SQL_CON->real_escape_string($new_password).'\\', `InternalKey` = \\''.$SQL_CON->real_escape_string($tInternalKey).'\\', `InternalDescription` = \\''.$SQL_CON->real_escape_string($tInternalDescription).'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResultC = $SQL_CON->query($tQueryC);");
            tFile.AppendLine("if (!$tResultC)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN11');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("respondAdd('modify', true);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN12');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC24');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- ADD ACCOUNT FACEBOOK ID ----");
            tFile.AppendLine("// I connect this account with facebook ID");
            tFile.AppendLine("if ($action == 'facebook')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('id', 'id', $ereg_facebook, 'ACC81', 'ACC82')) // I test facebook id");
            tFile.AppendLine("{");
            tFile.AppendLine("require_once($PATH_BASE.'/Facebook/autoload.php');");
            tFile.AppendLine("require_once($PATH_BASE.'/Facebook/Facebook.php');");
            tFile.AppendLine("myLog( '$sAppKey: ' . $NWD_FCB_AID, __FILE__, __FUNCTION__, __LINE__ );");
            tFile.AppendLine("myLog( '$sAppSecret: ' . $NWD_FCB_SRT, __FILE__, __FUNCTION__, __LINE__ );");
            tFile.AppendLine("myLog( '$sFacebookToken: ' . $id, __FILE__, __FUNCTION__, __LINE__ );");
            tFile.AppendLine("$fb = new Facebook\\Facebook(['app_id' => $NWD_FCB_AID,'app_secret' => $NWD_FCB_SRT,'default_graph_version' => 'v2.2',]);");
            tFile.AppendLine("try {");
            tFile.AppendLine("// Returns a `Facebook\\FacebookResponse` object");
            tFile.AppendLine("$response = $fb->get('/me?fields=id,name', $id);");
            tFile.AppendLine("} catch(Facebook\\Exceptions\\FacebookResponseException $e) {");
            tFile.AppendLine("errorInfos('ACC83','Graph returned an error: ' . $e->getMessage());");
            tFile.AppendLine("} catch(Facebook\\Exceptions\\FacebookSDKException $e) {");
            tFile.AppendLine("errorAdd('ACC84','Facebook SDK returned an error: ' . $e->getMessage());");
            tFile.AppendLine("}");
            tFile.AppendLine("$user = $response->getGraphUser();");
            tFile.AppendLine("// myLog ( 'Name: ' . $user['name'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("// myLog ( 'ID: ' . $user['id'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$tFacebookID = $user['id'];");
            tFile.AppendLine("// Ok I test the facebook ID in my database");
            tFile.AppendLine("// I need to find the facebookID in my database and check if the UUID is the good");
            tFile.AppendLine("$tQuery = 'SELECT `Reference`, `ban` FROM `'.$ENV.'_NWDAccount` WHERE `FacebookID` LIKE \\''.$SQL_CON->real_escape_string($tFacebookID).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('ACC85');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($ban==false)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I create a permanent account if temporary before");
            tFile.AppendLine("// AccountAnonymeGenerate();");
            tFile.AppendLine("// Ok no facebookID in my Database");
            tFile.AppendLine("$tInternalKey = '';");
            tFile.AppendLine("$tInternalDescription = '';");
            tFile.AppendLine("if ($ENV == 'Dev')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInternalKey = 'facebook ID';");
            tFile.AppendLine("$tInternalDescription = 'dev account';");
            tFile.AppendLine("}");
            tFile.AppendLine("// I had the social value to this UUID and return the UUID");
            tFile.AppendLine("$tQueryB = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `FacebookID` = \\''.$SQL_CON->real_escape_string($tFacebookID).'\\', `InternalKey` = \\''.$SQL_CON->real_escape_string($tInternalKey).'\\', `InternalDescription` = \\''.$SQL_CON->real_escape_string($tInternalDescription).'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\';';");
            tFile.AppendLine("$tResultB = $SQL_CON->query($tQueryB);");
            tFile.AppendLine("if (!$tResultB)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQueryB.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('ACC86');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// Good");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("myLog('User is modified and social facebook was add', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$token = NWDRequestTokenReset ($tRow['Reference']); // reset connexion to zero");
            tFile.AppendLine("respondAdd('signup',true);");
            tFile.AppendLine("respondAdd('facebook_signup',true);");
            tFile.AppendLine("respondAdd('sign','facebook');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Oh ... facebookID allready present");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Reference'] == $uuid)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Good It's the good uuid ... do nothing, all is ok!");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Ban'] > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$ban = true;");
            tFile.AppendLine("error('ACC98');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// I have a valid account");
            tFile.AppendLine("AccountIsSigned();");
            tFile.AppendLine("if ($uuid != $tRow['Reference'])");
            tFile.AppendLine("{");
            tFile.AppendLine("respondNeedReloadData();");
            tFile.AppendLine("respondUUID($tRow['Reference']);");
            tFile.AppendLine("respondAdd('signin',true);");
            tFile.AppendLine("respondAdd('facebook_signin',true);");
            tFile.AppendLine("respondAdd('sign','facebook');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC88');");
            tFile.AppendLine("}");
            tFile.AppendLine("$uuid = $tRow['Reference'];");
            tFile.AppendLine("$token = NWDRequestTokenReset ($uuid); // reset connexion to zero");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this facebook id … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC87');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("// I connect this account with google ID");
            tFile.AppendLine("if ($action == 'google')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('id', 'id', $ereg_google, 'ACC71', 'ACC72')) // I test google id");
            tFile.AppendLine("{");
            tFile.AppendLine("$tGoogleID = $id;");
            tFile.AppendLine("// Ok I test the facebook ID in my database");
            tFile.AppendLine("// I need to find the GoogleID in my database and check if the UUID is the good");
            tFile.AppendLine("$tQuery = 'SELECT `Reference`, `ban` FROM `'.$ENV.'_NWDAccount` WHERE `GoogleID` LIKE \\''.$SQL_CON->real_escape_string($tGoogleID).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('ACC75');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($ban==false)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I create a permanent account if temporary before");
            tFile.AppendLine("// AccountAnonymeGenerate();");
            tFile.AppendLine("// Ok no $tGoogleID in my Database");
            tFile.AppendLine("$tInternalKey = '';");
            tFile.AppendLine("$tInternalDescription = '';");
            tFile.AppendLine("if ($ENV == 'Dev')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInternalKey = 'Google ID';");
            tFile.AppendLine("$tInternalDescription = 'dev account';");
            tFile.AppendLine("}");
            tFile.AppendLine("// I had the social value to this UUID and return the UUID");
            tFile.AppendLine("$tQueryB = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `GoogleID` = \\''.$SQL_CON->real_escape_string($tGoogleID).'\\', `InternalKey` = \\''.$SQL_CON->real_escape_string($tInternalKey).'\\', `InternalDescription` = \\''.$SQL_CON->real_escape_string($tInternalDescription).'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\';';");
            tFile.AppendLine("$tResultB = $SQL_CON->query($tQueryB);");
            tFile.AppendLine("if (!$tResultB)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQueryB.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('ACC76');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// Good");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("myLog('User is modified and social google was add', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$token = NWDRequestTokenReset ($tRow['Reference']); // reset connexion to zero");
            tFile.AppendLine("respondAdd('signup',true);");
            tFile.AppendLine("respondAdd('google_signup',true);");
            tFile.AppendLine("respondAdd('sign','google');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Oh ... googleID allready present");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Reference'] == $uuid)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Good It's the good uuid ... do nothing, all is ok!");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['ban'] > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$ban = true;");
            tFile.AppendLine("error('ACC98');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// I have a valid account");
            tFile.AppendLine("AccountIsSigned();");
            tFile.AppendLine("if ($uuid != $tRow['Reference'])");
            tFile.AppendLine("{");
            tFile.AppendLine("respondNeedReloadData();");
            tFile.AppendLine("respondUUID($tRow['Reference']);");
            tFile.AppendLine("respondAdd('signin',true);");
            tFile.AppendLine("respondAdd('google_signin',true);");
            tFile.AppendLine("respondAdd('sign','google');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC78');");
            tFile.AppendLine("}");
            tFile.AppendLine("$uuid = $tRow['Reference'];");
            tFile.AppendLine("$token = NWDRequestTokenReset ($uuid); // reset connexion to zero");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this google id … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC77');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- ADD ACCOUNT FACEBOOK ID ----");
            tFile.AppendLine("// I connect this account with facebook ID");
            tFile.AppendLine("if ($action == 'facebook_remove')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('id', 'id', $ereg_facebook, 'ACC81', 'ACC82')) // I test facebook id");
            tFile.AppendLine("{");
            tFile.AppendLine("require_once($PATH_BASE.'/Facebook/autoload.php');");
            tFile.AppendLine("require_once($PATH_BASE.'/Facebook/Facebook.php');");
            tFile.AppendLine("myLog( '$sAppKey: ' . $NWD_FCB_AID, __FILE__, __FUNCTION__, __LINE__ );");
            tFile.AppendLine("myLog( '$sAppSecret: ' . $NWD_FCB_SRT, __FILE__, __FUNCTION__, __LINE__ );");
            tFile.AppendLine("myLog( '$sFacebookToken: ' . $id, __FILE__, __FUNCTION__, __LINE__ );");
            tFile.AppendLine("$fb = new Facebook\\Facebook(['app_id' => $NWD_FCB_AID,'app_secret' => $NWD_FCB_SRT,'default_graph_version' => 'v2.2',]);");
            tFile.AppendLine("try {");
            tFile.AppendLine("// Returns a `Facebook\\FacebookResponse` object");
            tFile.AppendLine("$response = $fb->get('/me?fields=id,name', $id);");
            tFile.AppendLine("} catch(Facebook\\Exceptions\\FacebookResponseException $e) {");
            tFile.AppendLine("errorInfos('ACC83','Graph returned an error: ' . $e->getMessage());");
            tFile.AppendLine("} catch(Facebook\\Exceptions\\FacebookSDKException $e) {");
            tFile.AppendLine("errorAdd('ACC84','Facebook SDK returned an error: ' . $e->getMessage());");
            tFile.AppendLine("}");
            tFile.AppendLine("$user = $response->getGraphUser();");
            tFile.AppendLine("// myLog ( 'Name: ' . $user['name'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("// myLog ( 'ID: ' . $user['id'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$tFacebookID = $user['id'];");
            tFile.AppendLine("// Ok I test the facebook ID in my database");
            tFile.AppendLine("// I need to find the facebookID in my database and check if the UUID is the good");
            tFile.AppendLine("$tQuery = 'SELECT `Reference`, `ban` FROM `'.$ENV.'_NWDAccount` WHERE `FacebookID` LIKE \\''.$SQL_CON->real_escape_string($tFacebookID).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('ACC85');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Oh ... facebookID allready present");
            tFile.AppendLine("// Oh ... googleID allready present");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Reference'] == $uuid)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQueryD = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `FacebookID` = \\'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\';';");
            tFile.AppendLine("$tResultD = $SQL_CON->query($tQueryD);");
            tFile.AppendLine("if (!$tResultD)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQueryD.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("//error('ACC76');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// Good");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("myLog('User is modified and social google was remove', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("respondAdd('facebook_remove',true);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this facebook id … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC87');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("// REMOVE SOCIAL CONNECT");
            tFile.AppendLine("if ($action == 'google_remove')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('id', 'id', $ereg_google, 'ACC71', 'ACC72')) // I test google id");
            tFile.AppendLine("{");
            tFile.AppendLine("$tGoogleID = $id;");
            tFile.AppendLine("// Ok I test the facebook ID in my database");
            tFile.AppendLine("// I need to find the GoogleID in my database and check if the UUID is the good");
            tFile.AppendLine("$tQuery = 'SELECT `Reference`, `ban` FROM `'.$ENV.'_NWDAccount` WHERE `GoogleID` LIKE \\''.$SQL_CON->real_escape_string($tGoogleID).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('ACC75');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Oh ... googleID allready present");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Reference'] == $uuid)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQueryD = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `GoogleID` = \\'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\';';");
            tFile.AppendLine("$tResultD = $SQL_CON->query($tQueryD);");
            tFile.AppendLine("if (!$tResultD)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQueryD.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("//error('ACC76');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// Good");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("myLog('User is modified and social google was remove', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("respondAdd('google_remove',true);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this google id … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC77');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- SIGN OUT ----");
            tFile.AppendLine("// I sign in with the good value");
            tFile.AppendLine("if ($action == 'signout')");
            tFile.AppendLine("{");
            tFile.AppendLine("//NWDRequestTokenReset ($uuid); // reset connexion to zero");
            tFile.AppendLine("respondAdd('signout', true);");
            tFile.AppendLine("AccountAnonymousNeeded(false);");
            tFile.AppendLine("if (paramValue ('auuid', 'auuid', $ereg_auuidHash, 'ACC15', 'ACC45')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($auuid == $uuid)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN33');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$action = 'signanonymous';");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- SIGN ANONYMOUS ----");
            tFile.AppendLine("// I sign in with the good value");
            tFile.AppendLine("if ($action == 'signanonymous')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('auuid', 'auuid', $ereg_auuidHash, 'ACC15', 'ACC45')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('apassword', 'apassword', $ereg_apasswordHash, 'ACC16', 'ACC46')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("// if user is temporary user I must find the last letter equal to 'T'");
            tFile.AppendLine("if (substr($auuid, -1) == 'T')");
            tFile.AppendLine("{");
            tFile.AppendLine("// I put order to create anonymous account if account is not resolve before action (sync, etc)");
            tFile.AppendLine("AccountAnonymousNeeded(false);");
            tFile.AppendLine("respondAdd('create-anonymous', true);");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// I get the password uuid hash");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDAccount` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($auuid).'\\' AND `SecretKey` = \\''.$SQL_CON->real_escape_string($apassword).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('SGN25');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// unknow user");
            tFile.AppendLine("//error('SGN26');");
            tFile.AppendLine("//create new anonymous account");
            tFile.AppendLine("AccountAnonymeGenerate();");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("// ok I have one user");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Ban'] > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$ban = true;");
            tFile.AppendLine("error('ACC98');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Email'] == '' && $tRow['Password'] == '' && $tRow['FacebookID'] == '' && $tRow['GoogleID'] == '')");
            tFile.AppendLine("{");
            tFile.AppendLine("AccountIsSigned();");
            tFile.AppendLine("if ($uuid != $tRow['Reference'])");
            tFile.AppendLine("{");
            tFile.AppendLine("respondNeedReloadData();");
            tFile.AppendLine("respondUUID($tRow['Reference']);");
            tFile.AppendLine("respondAdd('sign-anonymous',true);");
            tFile.AppendLine("respondAdd('sign','anonymous');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN27');");
            tFile.AppendLine("}");
            tFile.AppendLine("$uuid = $tRow['Reference'];");
            tFile.AppendLine("$token = NWDRequestTokenReset ($uuid); // reset connexion to zero");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('create-anonymous', true);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this email … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("// to much users ...");
            tFile.AppendLine("error('SGN28');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("//---- DELETE ----");
            tFile.AppendLine("// I delete the account (ban)");
            tFile.AppendLine("if ($action == 'delete')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('password', 'password', $ereg_password, 'ACC11', 'ACC41')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if (paramValue ('password_confirm', 'password_confirm', $ereg_password, 'ACC12', 'ACC42')) // I test hashsec");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($password == $password_confirm)");
            tFile.AppendLine("{");
            tFile.AppendLine("// Ok I delete this account");
            tFile.AppendLine("$tQueryC = 'UPDATE `'.$ENV.'_NWDAccount` SET `DM` = \\''.$TIME_SYNC.'\\', `DD` = \\''.$TIME_SYNC.'\\', `AC` = \\'0\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `Password` = \\''.$SQL_CON->real_escape_string($password).'\\';';");
            tFile.AppendLine("$tResultC = $SQL_CON->query($tQueryC);");
            tFile.AppendLine("if (!$tResultC)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SGN19');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("AccountAnonymousNeeded(false);");
            tFile.AppendLine("respondAdd('usertransfert', false);");
            tFile.AppendLine("respondAdd('delete', true);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Ok I create a permanent account if temporary");
            tFile.AppendLine("AccountAnonymeGenerate();");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("if ($ban == true)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC99');");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_ACCOUNT_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticErrorFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// ERROR");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Declaration");
            tFile.AppendLine("errorDeclaration('UIG00', 'error in unique generate');");
            tFile.AppendLine("// sql error");
            tFile.AppendLine("errorDeclaration('SQL00', 'error SQL CONNEXION IMPOSSIBLE');");
            tFile.AppendLine("// header error");
            tFile.AppendLine("errorDeclaration('HEA01', 'os is empty');");
            tFile.AppendLine("errorDeclaration('HEA11', 'os is invalid');");
            tFile.AppendLine("errorDeclaration('HEA02', 'version is empty');");
            tFile.AppendLine("errorDeclaration('HEA12', 'version is invalid');");
            tFile.AppendLine("errorDeclaration('HEA03', 'lang is empty');");
            tFile.AppendLine("errorDeclaration('HEA13', 'lang is invalid');");
            tFile.AppendLine("errorDeclaration('HEA04', 'uuid is empty');");
            tFile.AppendLine("errorDeclaration('HEA14', 'uuid is invalid');");
            tFile.AppendLine("errorDeclaration('HEA05', 'hash is empty');");
            tFile.AppendLine("errorDeclaration('HEA15', 'hash is invalid');");
            tFile.AppendLine("errorDeclaration('HEA90', 'hash error');");
            tFile.AppendLine("// param error");
            tFile.AppendLine("errorDeclaration('PAR97', 'not json valid');");
            tFile.AppendLine("errorDeclaration('PAR98', 'json digest is false');");
            tFile.AppendLine("errorDeclaration('PAR99', 'json null');");
            tFile.AppendLine("// version error");
            tFile.AppendLine("errorDeclaration('GVA00', 'error in sql select Version');");
            tFile.AppendLine("errorDeclaration('GVA99', 'block data');");
            tFile.AppendLine("errorDeclaration('GVA01', 'stop : update app');");
            tFile.AppendLine("errorDeclaration('GVA02', 'stop unknow version : update app');");
            tFile.AppendLine("// Account error");
            tFile.AppendLine("errorDeclaration('ACC01', 'action is empty');");
            tFile.AppendLine("errorDeclaration('ACC02', 'action is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC03', 'appname is empty');");
            tFile.AppendLine("errorDeclaration('ACC04', 'appname is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC05', 'appmail is empty');");
            tFile.AppendLine("errorDeclaration('ACC06', 'appmail is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC10', 'email is empty');");
            tFile.AppendLine("errorDeclaration('ACC40', 'email is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC11', 'password is empty');");
            tFile.AppendLine("errorDeclaration('ACC41', 'password is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC12', 'confirm password is empty');");
            tFile.AppendLine("errorDeclaration('ACC22', 'sign-up password is different to confirm password');");
            tFile.AppendLine("errorDeclaration('ACC42', 'confirm password is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC13', 'old password is empty');");
            tFile.AppendLine("errorDeclaration('ACC43', 'old password is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC14', 'new password is empty');");
            tFile.AppendLine("errorDeclaration('ACC24', 'sign-up new password is different to confirm password');");
            tFile.AppendLine("errorDeclaration('ACC44', 'new password is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC15', 'auuid is empty');");
            tFile.AppendLine("errorDeclaration('ACC45', 'auuid is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC16', 'password is empty');");
            tFile.AppendLine("errorDeclaration('ACC46', 'password is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC55', 'email or login unknow');");
            tFile.AppendLine("errorDeclaration('ACC56', 'multi-account');");
            tFile.AppendLine("errorDeclaration('ACC71', 'GoogleID is empty');");
            tFile.AppendLine("errorDeclaration('ACC72', 'GoogleID is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC73', 'Google Graph error');");
            tFile.AppendLine("errorDeclaration('ACC74', 'Google SDK error');");
            tFile.AppendLine("errorDeclaration('ACC75', 'Google sql select error');");
            tFile.AppendLine("errorDeclaration('ACC76', 'Google sql update error');");
            tFile.AppendLine("errorDeclaration('ACC77', 'Google multi-account');");
            tFile.AppendLine("errorDeclaration('ACC78', 'Google singin error allready log with this account');");
            tFile.AppendLine("errorDeclaration('ACC81', 'FacebookID is empty');");
            tFile.AppendLine("errorDeclaration('ACC82', 'FacebookID is invalid format');");
            tFile.AppendLine("errorDeclaration('ACC83', 'Facebook Graph error');");
            tFile.AppendLine("errorDeclaration('ACC84', 'Facebook SDK error');");
            tFile.AppendLine("errorDeclaration('ACC85', 'Facebook sql select error');");
            tFile.AppendLine("errorDeclaration('ACC86', 'Facebook sql update error');");
            tFile.AppendLine("errorDeclaration('ACC87', 'Facebook multi-account');");
            tFile.AppendLine("errorDeclaration('ACC88', 'Facebook singin error allready log with this account');");
            tFile.AppendLine("errorDeclaration('ACC90', 'error in request select in Account');");
            tFile.AppendLine("errorDeclaration('ACC91', 'error in request insert anonymous Account');");
            tFile.AppendLine("errorDeclaration('ACC92', 'error in unknow account');");
            tFile.AppendLine("errorDeclaration('ACC95', 'user is multiple');");
            tFile.AppendLine("errorDeclaration('ACC99', 'user is banned');");
            tFile.AppendLine("errorDeclaration('ACC98', 'user is banned, no sign-in');");
            tFile.AppendLine("// Account sign error");
            tFile.AppendLine("errorDeclaration('SGN01', 'sign-up error in select valid account');");
            tFile.AppendLine("errorDeclaration('SGN02', 'sign-up error in select account by uuid');");
            tFile.AppendLine("errorDeclaration('SGN03', 'sign-up error in update account');");
            tFile.AppendLine("errorDeclaration('SGN04', 'sign-up error account allready linked with another email');");
            tFile.AppendLine("errorDeclaration('SGN05', 'sign-up error multi-account by uuid');");
            tFile.AppendLine("errorDeclaration('SGN06', 'sign-up error account allready linked with this email');");
            tFile.AppendLine("errorDeclaration('SGN07', 'sign-up error another account allready linked with this email');");
            tFile.AppendLine("errorDeclaration('SGN08', 'sign-up error multi-account allready linked with this email');");
            tFile.AppendLine("errorDeclaration('SGN09', 'modify error in select valid account');");
            tFile.AppendLine("errorDeclaration('SGN10', 'modify error unknow account');");
            tFile.AppendLine("errorDeclaration('SGN11', 'sign-up error in update account');");
            tFile.AppendLine("errorDeclaration('SGN12', 'modify error multi-account');");
            tFile.AppendLine("errorDeclaration('SGN13', 'modify error in select valid account');");
            tFile.AppendLine("errorDeclaration('SGN14', 'modify error email allready use in another account');");
            tFile.AppendLine("errorDeclaration('SGN15', 'singin error in request account ');");
            tFile.AppendLine("errorDeclaration('SGN16', 'singin error no account ');");
            tFile.AppendLine("errorDeclaration('SGN17', 'singin error allready log with this account');");
            tFile.AppendLine("errorDeclaration('SGN18', 'singin error multi-account ');");
            tFile.AppendLine("errorDeclaration('SGN19', 'delete error in update account');");
            tFile.AppendLine("errorDeclaration('SGN25', 'signanonymous error in request account ');");
            tFile.AppendLine("errorDeclaration('SGN26', 'signanonymous error no account ');");
            tFile.AppendLine("errorDeclaration('SGN27', 'signanonymous error allready log with this account');");
            tFile.AppendLine("errorDeclaration('SGN28', 'signanonymous error multi-account ');");
            tFile.AppendLine("errorDeclaration('SGN33', 'signout impossible with anonymous account equal to restaured account');");
            tFile.AppendLine("errorDeclaration('SGN70', 'rescue select error');");
            tFile.AppendLine("errorDeclaration('SGN71', 'rescue unknow user');");
            tFile.AppendLine("errorDeclaration('SGN72', 'rescue multi-user');");
            tFile.AppendLine("errorDeclaration('SGN80', 'session select error');");
            tFile.AppendLine("errorDeclaration('SGN81', 'impossible unknow user');");
            tFile.AppendLine("errorDeclaration('SGN82', 'impossible multi-users');");
            tFile.AppendLine("// Token error");
            tFile.AppendLine("errorDeclaration('RQT01', 'error in request token creation');");
            tFile.AppendLine("errorDeclaration('RQT11', 'new token is not in base');");
            tFile.AppendLine("errorDeclaration('RQT12', 'error in token select');");
            tFile.AppendLine("errorDeclaration('RQT13', 'error in token delete');");
            tFile.AppendLine("errorDeclaration('RQT90', 'session not exists');");
            tFile.AppendLine("errorDeclaration('RQT91', 'session expired');");
            tFile.AppendLine("errorDeclaration('RQT92', 'token not in base');");
            tFile.AppendLine("errorDeclaration('RQT93', 'too much tokens in base ... reconnect you');");
            tFile.AppendLine("errorDeclaration('RQT94', 'too much tokens in base ... reconnect you');");
            tFile.AppendLine("errorDeclaration('SERVER', 'error internal');");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// init error state");
            tFile.AppendLine("$ERR_BOL = false;");
            tFile.AppendLine("$ERR_COD = '';");
            tFile.AppendLine("$ERR_DSC = '';");
            tFile.AppendLine("$ERR_INF = '';");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// errors declared list");
            tFile.AppendLine("$ERR_LST;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Use to declare an error use after");
            tFile.AppendLine("function errorDeclaration($sCode, $sDescription)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_LST;");
            tFile.AppendLine("$ERR_LST[$sCode] = $sDescription;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Use to insert error pre-declare in JSON's respond");
            tFile.AppendLine("function error($sCode, $sExit=true)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_LST, $ERR_BOL, $ERR_COD, $ERR_DSC;");
            tFile.AppendLine("$ERR_BOL = true;");
            tFile.AppendLine("$ERR_COD = $sCode;");
            tFile.AppendLine("$ERR_DSC = $ERR_LST[$sCode];");
            tFile.AppendLine("myLogLineReturn();");
            tFile.AppendLine("myLog('error with code '.$sCode,'','','');");
            tFile.AppendLine("myLogLineReturn();");
            tFile.AppendLine("if ($sExit==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_FINISH_PHP + "');");
            tFile.AppendLine("exit;");
            tFile.AppendLine("}");
            tFile.AppendLine("else{");
            tFile.AppendLine("myLog('error without exit','','','');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Use to insert error in JSON's respond");
            tFile.AppendLine("function errorInfos($sCode,$sInfos)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_INF;");
            tFile.AppendLine("$ERR_INF = $sInfos;");
            tFile.AppendLine("error($sCode);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// return error in database");
            tFile.AppendLine("function errorReference($sReference)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON, $ENV;");
            tFile.AppendLine("$tRow = '';");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDError` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($sReference).'\\';';");
            tFile.AppendLine("// echo($tQuery);");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ERRx33');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows >= 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tRow = $tResult->fetch_assoc();");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("return $tRow;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// return true if error in respond");
            tFile.AppendLine("function errorDetected()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_BOL;");
            tFile.AppendLine("return $ERR_BOL;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// use to cancel error in respond");
            tFile.AppendLine("function errorCancel()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_BOL, $ERR_COD, $ERR_DSC, $ERR_INF;");
            tFile.AppendLine("$ERR_BOL = false;");
            tFile.AppendLine("$ERR_COD = '';");
            tFile.AppendLine("$ERR_DSC = '';");
            tFile.AppendLine("$ERR_INF = '';");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// insert keys and value in JSON's respond");
            tFile.AppendLine("function errorResult()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_BOL, $ERR_COD, $ERR_DSC, $ERR_INF;");
            tFile.AppendLine("if ($ERR_BOL == true)");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('error', $ERR_BOL);");
            tFile.AppendLine("respondAdd('error_code',$ERR_COD);");
            tFile.AppendLine("respondAdd('error_description',$ERR_DSC);");
            tFile.AppendLine("if ($ERR_INF!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('error_infos',$ERR_INF);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// insert keys and value in JSON's respond");
            tFile.AppendLine("function errorPossibilities()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ERR_LST;");
            tFile.AppendLine("respondAdd(errorPossibilities,$ERR_LST);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_ERROR_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticFinishFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// FINISH");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// prevent include from function for exit (typical example: error('XXX', true);)");
            tFile.AppendLine("global $NWD_LOG, $NWD_SLT_TMP, $SQL_CON, $NWD_TMA, $RRR_LOG, $REP, $WSBUILD, $TIME_SYNC, $REF_NEEDED, $ACC_NEEDED, $ENV, $NWD_SHA_VEC, $NWD_SHA_SEC, $NWD_SLT_STR, $NWD_SLT_END;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// add log");
            tFile.AppendLine("if ($NWD_LOG==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLogLineReturn();");
            tFile.AppendLine("myLogLineReturn();");
            tFile.AppendLine("myLogLineReturn();");
            tFile.AppendLine("respondAdd('log',$RRR_LOG);");
            tFile.AppendLine("respondAdd('Addon Ref',$REF_NEEDED);");
            tFile.AppendLine("respondAdd('Addon Acc',$ACC_NEEDED);");
            tFile.AppendLine("respondAdd('environment',$ENV);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// web-services build");
            tFile.AppendLine("respondAdd('wsbuild',$WSBUILD);");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("//disconnect mysql");
            tFile.AppendLine("mysqli_close($SQL_CON);");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Insert error if necessary");
            tFile.AppendLine("errorResult();");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// server benchmark");
            tFile.AppendLine("respondAdd('perform',microtime(true)-$NWD_TMA);");
            tFile.AppendLine("respondAdd('performRequest',microtime(true)-$_SERVER['REQUEST_TIME_FLOAT']);");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("//transform respond in JSON file");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("$temporalSalt = saltTemporal($NWD_SLT_TMP, 0);");
            tFile.AppendLine("if (isset($REP['token']))");
            tFile.AppendLine("{");
            tFile.AppendLine("header('hash: '.sha1($temporalSalt.$NWD_SHA_VEC.$REP['token']));");
            tFile.AppendLine("header('token: '.$REP['token']);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("$json = json_encode($REP);");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("if (respondIsset('securePost'))");
            tFile.AppendLine("{");
            tFile.AppendLine("header('scr: scrdgt');");
            tFile.AppendLine("$REPSCR['scr'] = aes128Encrypt( $json, $NWD_SHA_SEC, $NWD_SHA_VEC);");
            tFile.AppendLine("$REPSCR['scrdgt'] = sha1($NWD_SLT_STR.$REPSCR['scr'].$NWD_SLT_END);");
            tFile.AppendLine("$json = json_encode($REPSCR);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// write JSON");
            tFile.AppendLine("echo($json);");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_FINISH_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticFunctionsFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// Functions");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_RESPOND_PHP + "');");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_ERROR_PHP + "');");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_VALUES_PHP + "');");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("include_once ($PATH_BASE.'/" + Environment + "/" + NWD.K_DB + "/NWDAccount/" + NWD.K_WS_SYNCHRONISATION + "');");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// admin ?");
            tFile.AppendLine("$admin = false;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// ban account ?");
            tFile.AppendLine("$ban = false;");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function GetLocalizableString($sString, $sLang='BASE')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tLines = explode('•', $sString);");
            tFile.AppendLine("foreach ($tLines as $tline)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tKeyValues = explode(':', $tline);");
            tFile.AppendLine("$tResult[$tKeyValues[0]] = $tKeyValues[1];");
            tFile.AppendLine("}");
            tFile.AppendLine("if (isset($tResult[$sLang]))");
            tFile.AppendLine("{");
            tFile.AppendLine("return UnprotectLocalizableString($tResult[$sLang]);");
            tFile.AppendLine("}");
            tFile.AppendLine("else if (isset($tResult['BASE']))");
            tFile.AppendLine("{");
            tFile.AppendLine("return UnprotectLocalizableString($tResult['BASE']);");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("return '';");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function UnprotectLocalizableString($sString)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tString =  str_replace('@1#','•',$sString);");
            tFile.AppendLine("$tString =  str_replace('@2#',':',$tString);");
            tFile.AppendLine("$tString =  str_replace('@3#','_',$tString);");
            tFile.AppendLine("return $tString;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function versionTest($sVersion)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ENV;");
            tFile.AppendLine("global $SQL_CON;");
            tFile.AppendLine("global $admin;");
            tFile.AppendLine("$return = true;");
            tFile.AppendLine("$tTested = false;");
            tFile.AppendLine("//mylog('test version ' . $sVersion, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("if ($ENV=='Dev')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDVersion` WHERE `Version` = \\''.$SQL_CON->real_escape_string($sVersion).'\\' AND `Buildable` = 1 AND `ActiveDev` = 1 AND `XX`= 0 AND `AC`= 1;';");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($ENV=='Preprod')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDVersion` WHERE `Version` = \\''.$SQL_CON->real_escape_string($sVersion).'\\' AND `Buildable` = 1 AND `ActivePreprod` = 1 AND `XX`= 0 AND `AC`= 1;';");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($ENV=='Prod')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDVersion` WHERE `Version` = \\''.$SQL_CON->real_escape_string($sVersion).'\\' AND `Buildable` = 1 AND `ActiveProd` = 1 AND `XX`= 0 AND `AC`= 1;';");
            tFile.AppendLine("}");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('GVA00');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("//              mylog('OK ONE RESULT FOR VERSION REQUEST ' . $sVersion, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['BlockDataUpdate'] == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("//                      mylog('BUT BLOCK UPDATE DATAS' . $sVersion, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('GVA99');");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($tRow['BlockApplication'] == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("//                      mylog('BUT FORCE UPDATE APP' . $sVersion, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('GVA01');");
            tFile.AppendLine("respondAdd('AlertTitle',$tRow['AlertTitle']);");
            tFile.AppendLine("respondAdd('AlertMessage',$tRow['AlertMessage']);");
            tFile.AppendLine("respondAdd('AlertValidation',$tRow['AlertValidation']);");
            tFile.AppendLine("respondAdd('OSXStoreURL',$tRow['OSXStoreURL']);");
            tFile.AppendLine("respondAdd('IOSStoreURL',$tRow['IOSStoreURL']);");
            tFile.AppendLine("respondAdd('GooglePlayURL',$tRow['GooglePlayURL']);");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("//              mylog('ERROR NO RESULT OR TOO MUCH RESULT FOR VERSION REQUEST ' . $sVersion, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("error('GVA02');");
            tFile.AppendLine("respondAdd('AlertTitle',$tRow['AlertTitle']);");
            tFile.AppendLine("respondAdd('AlertMessage',$tRow['AlertMessage']);");
            tFile.AppendLine("respondAdd('AlertValidation',$tRow['AlertValidation']);");
            tFile.AppendLine("respondAdd('OSXStoreURL',$tRow['OSXStoreURL']);");
            tFile.AppendLine("respondAdd('IOSStoreURL',$tRow['IOSStoreURL']);");
            tFile.AppendLine("respondAdd('GooglePlayURL',$tRow['GooglePlayURL']);");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("return $return;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("// log function");
            tFile.AppendLine("$RRR_LOG = '';");
            tFile.AppendLine("$RRR_LOG_CNT = 0;");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function myLogLineReturn()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $RRR_LOG,$RRR_LOG_CNT;");
            tFile.AppendLine("$RRR_LOG_CNT++;");
            tFile.AppendLine("$RRR_LOG.='\\r'.$RRR_LOG_CNT;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function myLog($sString, $sfile, $sfunction, $sline)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $RRR_LOG,$RRR_LOG_CNT;");
            tFile.AppendLine("$RRR_LOG_CNT++;");
            tFile.AppendLine("$sfile = basename($sfile);");
            tFile.AppendLine("$t = round(strlen($sfile)/4);");
            tFile.AppendLine("$r = 20-strlen($sfile);");
            tFile.AppendLine("$RRR_LOG.='\\r'.$RRR_LOG_CNT.' - '.$sfile.' ';");
            tFile.AppendLine("for ($i=$r;$i>0;$i--)");
            tFile.AppendLine("{");
            tFile.AppendLine("$RRR_LOG.=' ';");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($sfunction!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("$eeee = $sfunction.'() line '.$sline;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$eeee = 'line '.$sline;");
            tFile.AppendLine("}");
            tFile.AppendLine("$r = 40-strlen($eeee);");
            tFile.AppendLine("$RRR_LOG.=$eeee;");
            tFile.AppendLine("for ($i=$r;$i>0;$i--)");
            tFile.AppendLine("{");
            tFile.AppendLine("$RRR_LOG.=' ';");
            tFile.AppendLine("}");
            tFile.AppendLine("$RRR_LOG.=$sString;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function adminHashTest ($sAdminHash, $sAdminKey, $sFrequence)");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("$temporalSalt = saltTemporal($sFrequence, 0);");
            tFile.AppendLine("$tHash = sha1($sAdminKey.$temporalSalt);");
            tFile.AppendLine("if ($sAdminHash == $tHash)");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("$temporalSaltMinor = saltTemporal($sFrequence, -1);");
            tFile.AppendLine("$tHashMinor = sha1($sAdminKey.$temporalSaltMinor);");
            tFile.AppendLine("if ($sAdminHash == $tHashMinor)");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("$temporalSaltMajor = saltTemporal($sFrequence, +1);");
            tFile.AppendLine("$tHashMajor = sha1($sAdminKey.$temporalSaltMajor);");
            tFile.AppendLine("if ($sAdminHash == $tHashMajor)");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("return $rReturn;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function referenceRandom ($sPrefix)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $TIME_SYNC;");
            tFile.AppendLine("$tTime = $TIME_SYNC-1492711200; // Timestamp unix format");
            tFile.AppendLine("return $sPrefix.'-'.$tTime.'-'.rand ( 100000 , 999999 ).'C'; // C for Certify");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function referenceGenerate ($sPrefix, $sTable, $sColumn)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON;");
            tFile.AppendLine("$tReference = referenceRandom($sPrefix);");
            tFile.AppendLine("$tTested = false;");
            tFile.AppendLine("while ($tTested == false)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT `'.$sColumn.'` FROM `'.$sTable.'` WHERE `'.$sColumn.'` LIKE \\''.$SQL_CON->real_escape_string($tReference).'\\';';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tQuery.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('UIG00');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tTested = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$tReference = referenceRandom();");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("return $tReference;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("// temporary account ?");
            tFile.AppendLine("// global $ACC_TMP, $ACC_NEED_USER_TRANSFERT;");
            tFile.AppendLine("$ACC_TMP = false;");
            tFile.AppendLine("$ACC_NEED_USER_TRANSFERT = false;");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function AccountAnonymousNeeded($sUserTransfert=true)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ACC_TMP, $ACC_NEED_USER_TRANSFERT;");
            tFile.AppendLine("$ACC_TMP = true;");
            tFile.AppendLine("$ACC_NEED_USER_TRANSFERT = $sUserTransfert;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function AccountIsSigned()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ACC_TMP;");
            tFile.AppendLine("$ACC_TMP = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("//  function OldAccountRescue($sUuid, $sSecretKey)");
            tFile.AppendLine("//  {");
            tFile.AppendLine("//      ");
            tFile.AppendLine("//  }");
            tFile.AppendLine("//      //--------------------");
            tFile.AppendLine("//  function AccountAnonymeCancel()");
            tFile.AppendLine("//  {");
            tFile.AppendLine("//      respondRemove('newuser');");
            tFile.AppendLine("//      respondRemove('usertransfert');");
            tFile.AppendLine("//      respondRemove('sign');");
            tFile.AppendLine("//      respondRemove('signkey');");
            tFile.AppendLine("//      respondRemove('reloaddatas');");
            tFile.AppendLine("//  }");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function AccountAnonymeGenerate($sExit=true)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $ACC_TMP, $TIME_SYNC, $ACC_NEED_USER_TRANSFERT;");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("if ($ACC_TMP == true)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON;");
            tFile.AppendLine("global $token, $uuid;");
            tFile.AppendLine("global $ENV, $WSBUILD;");
            tFile.AppendLine("global $SQL_NWDAccount_WebService;");
            tFile.AppendLine("$tInternalKey = '';");
            tFile.AppendLine("$tInternalDescription = '';");
            tFile.AppendLine("$tNewUUID = referenceGenerate ('ACC', $ENV.'_NWDAccount', 'Reference');");
            tFile.AppendLine("$tNewSecretKey = referenceGenerate ('SHS', $ENV.'_NWDAccount', 'SecretKey');");
            tFile.AppendLine("$tInsertSQL='';");
            tFile.AppendLine("$tInsertSQLValue='';");
            tFile.AppendLine("//`Reference`, `DM`, `DS`, `DevSync`, `PreprodSync`, `ProdSync`, `AC`, `AppleNotificationToken`, `Ban`, `DC`, `DD`,");
            tFile.AppendLine("// `Email`, `FacebookID`, `GoogleID`, `GoogleNotificationToken`, `InError`, ");
            tFile.AppendLine("//`InternalDescription`, `InternalKey`, `MinVersion`, `Password`, `Preview`, `SecretKey`, `Tag`, `UseInEnvironment`, `WebModel`, `XX`");
            tFile.AppendLine("$tInsertSQL.='INSERT INTO `'.$ENV.'_NWDAccount` (';");
            tFile.AppendLine("$tInsertSQL.='`Reference`, '; $tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string($tNewUUID).'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`ServerHash`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`ServerLog`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DM`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DS`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', ';");
            tFile.AppendLine("if ($ENV == 'Dev')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInsertSQL.='`InternalKey`, ';$tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string(md5($_SERVER['REMOTE_ADDR']).'-'.$WSBUILD.'-'.$TIME_SYNC).'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`InternalDescription`, ';$tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string('Dev account').'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DevSync`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`PreprodSync`, ';$tInsertSQLValue.= '\\'-1\\', ';");
            tFile.AppendLine("$tInsertSQL.='`ProdSync`, ';$tInsertSQLValue.= '\\'-1\\', ';");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($ENV == 'Preprod')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInsertSQL.='`InternalKey`, ';$tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string(md5($_SERVER['REMOTE_ADDR']).'-'.$WSBUILD.'-'.$TIME_SYNC).'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`InternalDescription`, ';$tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string('Preprod account').'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DevSync`, ';$tInsertSQLValue.= '\\'-1\\', ';");
            tFile.AppendLine("$tInsertSQL.='`PreprodSync`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`ProdSync`, ';$tInsertSQLValue.= '\\'-1\\', ';");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($ENV == 'Prod')");
            tFile.AppendLine("{");
            tFile.AppendLine("$tInsertSQL.='`InternalKey`, ';$tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string(md5($_SERVER['REMOTE_ADDR']).'-'.$WSBUILD.'-'.$TIME_SYNC).'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`InternalDescription`, ';$tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string('Prod account').'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DevSync`, ';$tInsertSQLValue.= '\\'-1\\', ';");
            tFile.AppendLine("$tInsertSQL.='`PreprodSync`, ';$tInsertSQLValue.= '\\'-1\\', ';");
            tFile.AppendLine("$tInsertSQL.='`ProdSync`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', ';");
            tFile.AppendLine("}");
            tFile.AppendLine("$tInsertSQL.='`AC`, ';$tInsertSQLValue.= '\\'1\\', ';");
            tFile.AppendLine("$tInsertSQL.='`AppleNotificationToken`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`Ban`, ';$tInsertSQLValue.= '\\'0\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DC`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`DD`, ';$tInsertSQLValue.= '\\''.$TIME_SYNC.'\\', '; ");
            tFile.AppendLine("$tInsertSQL.='`Email`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`FacebookID`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`GoogleID`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`GoogleNotificationToken`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`InError`, ';$tInsertSQLValue.= '\\'0\\', ';");
            tFile.AppendLine("$tInsertSQL.='`MinVersion`, ';$tInsertSQLValue.= '\\'0.00.00\\', ';");
            tFile.AppendLine("$tInsertSQL.='`Password`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`Preview`, ';$tInsertSQLValue.= '\\'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`SecretKey`, '; $tInsertSQLValue.= '\\''.$SQL_CON->real_escape_string($tNewSecretKey).'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`Tag`, ';$tInsertSQLValue.= '\\'19\\', '; // server created");
            tFile.AppendLine("$tInsertSQL.='`UseInEnvironment`, ';$tInsertSQLValue.= '\\'0\\', ';");
            tFile.AppendLine("$tInsertSQL.='`WebModel`, ';$tInsertSQLValue.= '\\''.$SQL_NWDAccount_WebService.'\\', ';");
            tFile.AppendLine("$tInsertSQL.='`XX` ';$tInsertSQLValue.= '\\'0\\'';");
            tFile.AppendLine("$tInsertSQL.=')';");
            tFile.AppendLine("$tInsertSQL.=' VALUES ('.$tInsertSQLValue.');';");
            tFile.AppendLine("$tInsert = $SQL_CON->query($tInsertSQL);");
            tFile.AppendLine("if (!$tInsert)");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('sql', $tInsertSQL);");
            tFile.AppendLine("error('ACC91');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$uuid = $tNewUUID;");
            tFile.AppendLine("IntegrityNWDAccountReevalue ($uuid);");
            tFile.AppendLine("respondUUID($uuid);");
            tFile.AppendLine("respondAdd('newuser', true);");
            tFile.AppendLine("respondAdd('usertransfert', $ACC_NEED_USER_TRANSFERT);");
            tFile.AppendLine("respondAdd('sign', 'anonymous');");
            tFile.AppendLine("respondAdd('signkey', $tNewSecretKey);");
            tFile.AppendLine("respondAdd('reloaddatas', true);");
            tFile.AppendLine("NWDRequestTokenIsValid($uuid,'');");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("$ACC_TMP = false;");
            tFile.AppendLine("if ($sExit==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_FINISH_PHP + "');");
            tFile.AppendLine("exit;");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("return $rReturn;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function CodeRandomSizable (int $sSize)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tMin = 1;");
            tFile.AppendLine("while ($sSize>1)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tMin = $tMin*10;");
            tFile.AppendLine("$sSize--;");
            tFile.AppendLine("}");
            tFile.AppendLine("$tMax = ($tMin*10)-1;");
            tFile.AppendLine("return rand ($tMin ,$tMax );");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function RandomString($sLength = 10) {");
            tFile.AppendLine("$tCharacters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';");
            tFile.AppendLine("$tCharactersLength = strlen($tCharacters);");
            tFile.AppendLine("$tRandomString = '';");
            tFile.AppendLine("for ($i = 0; $i < $sLength; $i++) {");
            tFile.AppendLine("$tRandomString .= $tCharacters[rand(0, $tCharactersLength - 1)];");
            tFile.AppendLine("}");
            tFile.AppendLine("myLog('tRandomString = '.$tRandomString, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("return $tRandomString;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);

            tFile.AppendLine("function UniquePropertyValueFromValue($sTable, $sColumnOrign, $sColumUniqueResult, $sReference, $sNeverEmpty = true)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON, $TIME_SYNC;");
            tFile.AppendLine("$rModified = false;");
            tFile.AppendLine("$tQuery = 'SELECT `'.$sColumnOrign.'`, `'.$sColumUniqueResult.'`, `Reference` FROM `'.$sTable.'` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($sReference).'\\'';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("//myLog($SQL_CON->error, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("errorDeclaration('UPVFV00', 'error in select other UniqueNickname allready install');");
            tFile.AppendLine("error('UPVFV00');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("//myLog(json_encode($tRow), __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("if ($tRow[$sColumnOrign] == '' && $sNeverEmpty == true)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tRow[$sColumnOrign] = RandomString(10);");
            tFile.AppendLine("}");
            tFile.AppendLine("$tOrigin = str_replace('#','',$tRow[$sColumnOrign]);");
            tFile.AppendLine("$tOrigin = str_replace(' ','-',$tOrigin);");
            tFile.AppendLine("$tNick = $tOrigin.'#???';");
            tFile.AppendLine("$tNickArray = explode('#',$tRow[$sColumUniqueResult]);");
            tFile.AppendLine("if (count($tNickArray)==2)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tCodeAc = $tNickArray[1];");
            tFile.AppendLine("if (preg_match ('/^([0-9]{1,12})$/', $tCodeAc))");
            tFile.AppendLine("{");
            tFile.AppendLine("$tNick = $tNickArray[0];");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// error ");
            tFile.AppendLine("}");
            tFile.AppendLine("$tTested = false;");
            tFile.AppendLine("$tSize = 3;");
            tFile.AppendLine("if ($tOrigin == $tNick)");
            tFile.AppendLine("{");
            tFile.AppendLine("//myLog('la donne est de meme nickname ', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("// Nothing to do ? perhaps ... I test");
            tFile.AppendLine("$tQueryTest = 'SELECT `'.$sColumUniqueResult.'` FROM `'.$sTable.'` WHERE `'.$sColumUniqueResult.'` LIKE \\''.$SQL_CON->real_escape_string($tRow[$sColumUniqueResult]).'\\'';");
            tFile.AppendLine("$tResultTest = $SQL_CON->query($tQueryTest);");
            tFile.AppendLine("if (!$tResultTest)");
            tFile.AppendLine("{");
            tFile.AppendLine("errorDeclaration('UPVFV01', 'error in select other UniqueNickname allready install');");
            tFile.AppendLine("error('UPVFV01');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResultTest->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tTested = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($tTested == false)");
            tFile.AppendLine("{");
            tFile.AppendLine("// I need change for an unique nickname");
            tFile.AppendLine("while ($tTested == false)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tPinCode = CodeRandomSizable($tSize++);");
            tFile.AppendLine("$tQueryTestUnique = 'SELECT `'.$sColumUniqueResult.'` FROM `'.$sTable.'` WHERE `'.$sColumUniqueResult.'` LIKE \\''.$SQL_CON->real_escape_string($tOrigin).'#'.$tPinCode.'\\'';");
            tFile.AppendLine("$tResultTestUnique = $SQL_CON->query($tQueryTestUnique);");
            tFile.AppendLine("if (!$tResultTestUnique)");
            tFile.AppendLine("{");
            tFile.AppendLine("//myLog($SQL_CON->error, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("errorDeclaration('UPVFV02', 'error in select other UniqueNickname allready install');");
            tFile.AppendLine("error('UPVFV02');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResultTestUnique->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tTested = true;");
            tFile.AppendLine("$rModified = true;");
            tFile.AppendLine("// Ok I have a good PinCode I update");
            tFile.AppendLine("$tQueryUpdate = 'UPDATE `'.$sTable.'` SET `DM` = \\''.$TIME_SYNC.'\\', `'.$sColumnOrign.'` = \\''.$SQL_CON->real_escape_string($tOrigin).'\\', `'.$sColumUniqueResult.'` = \\''.$SQL_CON->real_escape_string($tOrigin).'#'.$tPinCode.'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($sReference).'\\'';");
            tFile.AppendLine("//myLog('$tQueryUpdate', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("//myLog($tQueryUpdate, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$tResultUpdate = $SQL_CON->query($tQueryUpdate);");
            tFile.AppendLine("if (!$tResultUpdate)");
            tFile.AppendLine("{");
            tFile.AppendLine("//myLog($SQL_CON->error, __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("errorDeclaration('UPVFV03', 'error in updtae reference object pincode');");
            tFile.AppendLine("error('UPVFV03');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("//myLog('pincode is update', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("errorDeclaration('UPVFV04', 'error in select multiple reference or no reference (!=1)');");
            tFile.AppendLine("error('UPVFV04');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("return $rModified;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_FUNCTIONS_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticRelationshipFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// RELATIONSHIP");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_RELATIONSHIP_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticRequestFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// REQUEST");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_REQUEST_TOKEN_PHP + "');");
            tFile.AppendLine("$ereg_os = '/^(editor|unity|ios|osx|android|web|win|wp8|ps3|ps4|psp|switch)$/';");
            tFile.AppendLine("$ereg_version = '/^([0-9]{1,2})+(\\.[0-9]{1,3})*$/';");
            tFile.AppendLine("$ereg_lang = '/^([A-Z\\_\\-a-z]{2,7})$/';");
            tFile.AppendLine("$ereg_UUID = '/^([A-Za-z0-9\\-]{15,48})$/';");
            tFile.AppendLine("$ereg_hash = '/^([A-Za-z0-9\\-]{3,48})$/';");
            tFile.AppendLine("$ereg_hash = '/^(.*)$/';");
            tFile.AppendLine("$ereg_token = '/^(.*)$/';");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("if (headerValue ('os', 'os', $ereg_os, 'HEA01', 'HEA11')) // test if os infos is valid");
            tFile.AppendLine("{");
            tFile.AppendLine("if (headerValue ('version', 'version', $ereg_version, 'HEA02', 'HEA12')) // test if version is ok");
            tFile.AppendLine("{");
            tFile.AppendLine("// I must prevent admin mode in table creation");
            tFile.AppendLine("global $admin;");
            tFile.AppendLine("headerBrutalValue ('adminHash', 'adminHash');");
            tFile.AppendLine("$admin = adminHashTest ($adminHash, $NWD_ADM_KEY, $NWD_SLT_TMP);");
            tFile.AppendLine("if ($admin==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("$versionValid = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$versionValid = versionTest($version);");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($versionValid == true)");
            tFile.AppendLine("{");
            tFile.AppendLine("if (headerValue ('lang', 'lang', $ereg_lang, 'HEA03', 'HEA13')) // test if lang is ok");
            tFile.AppendLine("{");
            tFile.AppendLine("if (headerValue ('uuid', 'uuid', $ereg_UUID, 'HEA04', 'HEA14')) // test UUID of headers");
            tFile.AppendLine("{");
            tFile.AppendLine("if (headerValue ('hash', 'hash', $ereg_hash, 'HEA05', 'HEA15')) // test hash of headers");
            tFile.AppendLine("{");
            tFile.AppendLine("headerBrutalValue ('token', 'token');");
            tFile.AppendLine("$temporalSalt = saltTemporal($NWD_SLT_TMP, 0);");
            tFile.AppendLine("$tHash = sha1($os.$version.$lang.$temporalSalt.$uuid.$token);");
            tFile.AppendLine("$temporalSaltMinor = saltTemporal($NWD_SLT_TMP, -1);");
            tFile.AppendLine("$tHashMinor = sha1($os.$version.$lang.$temporalSaltMinor.$uuid.$token);");
            tFile.AppendLine("$temporalSaltMajor = saltTemporal($NWD_SLT_TMP, +1);");
            tFile.AppendLine("$tHashMajor = sha1($os.$version.$lang.$temporalSaltMajor.$uuid.$token);");
            tFile.AppendLine("$Verif = false;");
            tFile.AppendLine("if ($tHashMinor == $hash || $tHash ==$hash || $tHashMajor == $hash)");
            tFile.AppendLine("{");
            tFile.AppendLine("getParams('prm', 'prmdgt', true, false);");
            tFile.AppendLine("if(getParams('scr', 'scrdgt', false, true)==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("respondAdd('securePost',true);");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($SQL_MNG == false)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT `Reference`,`Ban` FROM `'.$ENV.'_NWDAccount` WHERE `Reference` = \\''.$SQL_CON->real_escape_string($uuid).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC90');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// if user is temporary user I must find the last letter equal to 'T'");
            tFile.AppendLine("if (substr($uuid, -1) == 'T')");
            tFile.AppendLine("{");
            tFile.AppendLine("// I put order to create anonymous account if account is not resolve before action (sync, etc)");
            tFile.AppendLine("AccountAnonymousNeeded(true);");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// strange… an unknow account but not temporary … it's not possible");
            tFile.AppendLine("error('ACC92');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['Ban'] > 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("$ban = true;");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this UUID … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC95');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("// I test the request token");
            tFile.AppendLine("NWDRequestTokenIsValid($uuid,$token);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("error('HEA90');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// Ok I create a permanent account if temporary before");
            tFile.AppendLine("AccountAnonymeGenerate();");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("if ($ban == true)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('ACC99', true);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_REQUEST_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticRequestTokenFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// REQUEST TOKEN");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function NWDRequestTokenCreate($sUUIDHash)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON, $ENV, $TIME_SYNC;");
            tFile.AppendLine("$tToken = NWDRequestTokenGenerateToken($sUUIDHash);");
            tFile.AppendLine("$tInsert = $SQL_CON->query('INSERT INTO `'.$ENV.'_NWDRequestToken` (`DC`, `DM`, `DD`, `AC`, `Token`, `UUIDHash`, `Integrity`) VALUES ( \\''.$TIME_SYNC.'\\', \\''.$TIME_SYNC.'\\', \\'0\\', \\'1\\', \\''.$SQL_CON->real_escape_string($tToken).'\\', \\''.$SQL_CON->real_escape_string($sUUIDHash).'\\', \\'???????\\' );');");
            tFile.AppendLine("if (!$tInsert)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('RQT01');");
            tFile.AppendLine("myLog('error in mysqli request : ('. $SQL_CON->errno.')'. $SQL_CON->error.' in : '.$tInsert.'', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("}");
            tFile.AppendLine("return $tToken;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function NWDRequestTokenDeleteOldToken ($sUUIDHash, $sTimestamp, $sToken)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON, $ENV;");
            tFile.AppendLine("myLog('delete old token', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$tQuery = 'DELETE FROM `'.$ENV.'_NWDRequestToken` WHERE `UUIDHash` = \\''.$SQL_CON->real_escape_string($sUUIDHash).'\\' AND `DM` <= \\''.$SQL_CON->real_escape_string($sTimestamp).'\\' AND `Token` != \\''.$SQL_CON->real_escape_string($sToken).'\\';';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('RQT14');");
            tFile.AppendLine("myLog('ERROR IN '.$tQuery);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function NWDRequestTokenGenerateToken ($sUUIDHash)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $TIME_SYNC;");
            tFile.AppendLine("$tRandom = $sUUIDHash.'-'.$TIME_SYNC.'-'.rand ( 1000000000 , 9999999999 ).'-0';");
            tFile.AppendLine("return md5($tRandom);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function NWDRequestTokenDeleteAllToken ($sUUIDHash)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON, $ENV;");
            tFile.AppendLine("$tQuery = 'DELETE FROM `'.$ENV.'_NWDRequestToken` WHERE `UUIDHash` = \\''.$SQL_CON->real_escape_string($sUUIDHash).'\\';';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('RQT13');");
            tFile.AppendLine("myLog('ERROR IN '.$tQuery);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function NWDRequestTokenReset ($sUUIDHash)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("global $token;");
            tFile.AppendLine("NWDRequestTokenDeleteAllToken ($sUUIDHash);");
            tFile.AppendLine("$token = NWDRequestTokenCreate ($sUUIDHash);");
            tFile.AppendLine("$REP['token']=$token;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function NWDRequestTokenIsValid ($sUUIDHash, $sToken)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $SQL_CON, $ENV, $TIME_SYNC;");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("global $token;");
            tFile.AppendLine("global $token_FirstUse;");
            tFile.AppendLine("global $RTH;");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("if ($sToken=='')");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("$token = NWDRequestTokenCreate($sUUIDHash);");
            tFile.AppendLine("$REP['token'] = $token;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$tQuery = 'SELECT `Token`,`DM`, `AC` FROM `'.$ENV.'_NWDRequestToken` WHERE `UUIDHash` = \\''.$SQL_CON->real_escape_string($sUUIDHash).'\\' AND `DD` = \\'0\\';';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('RQT12');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// not possible ... the token is too old and the base was purged since the last connexion");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("error('RQT90');");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows <= $RTH)");
            tFile.AppendLine("{");
            tFile.AppendLine("// ok I have some token for this user ...");
            tFile.AppendLine("$tTokenIsValid = false;");
            tFile.AppendLine("$tTimestamp = 0;");
            tFile.AppendLine("$tToken = '';");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('find token : '.$tRow['Token'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("if ($tRow['Token'] == $sToken)");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tRow['AC'] == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('find OLD token reused: '.$tRow['Token'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("$token_FirstUse = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$token_FirstUse = true;");
            tFile.AppendLine("$tQueryUseToken = 'UPDATE `'.$ENV.'_NWDRequestToken` SET `AC` = \\'0\\' WHERE `Token` = \\''.$SQL_CON->real_escape_string($tRow['Token']).'\\';';");
            tFile.AppendLine("$tResultUseToken = $SQL_CON->query($tQueryUseToken);");
            tFile.AppendLine("if (!$tResultUseToken)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('RQT11');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("myLog('find token, Use IT: '.$tRow['Token'], __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("$tTokenIsValid = true;");
            tFile.AppendLine("$tTimestamp = $tRow['DM'];");
            tFile.AppendLine("$tToken = $tRow['Token'];");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// Not the good token ... newest or oldest ... don't use it to analyze");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("if ($tTokenIsValid==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("NWDRequestTokenDeleteOldToken ($sUUIDHash, $tTimestamp, $tToken);");
            tFile.AppendLine("$token = NWDRequestTokenCreate($sUUIDHash);");
            tFile.AppendLine("$REP['token'] = $token;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("error('RQT91');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// not possible ... the token are too number");
            tFile.AppendLine("myLog('not possible ... the token are too number', __FILE__, __FUNCTION__, __LINE__);");
            tFile.AppendLine("error('RQT93');");
            tFile.AppendLine("//                  $TokenDate = '';");
            tFile.AppendLine("//                  $LastTokenDate = '';");
            tFile.AppendLine("//                  $TokenInConflict; // only one by one;");
            tFile.AppendLine("//                  $TokenMajor;");
            tFile.AppendLine("//                  while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("//                  {");
            tFile.AppendLine("//                      if ($tRow['Token'] == $sToken)");
            tFile.AppendLine("//                      {");
            tFile.AppendLine("//                          $TokenDate = $tRow['Token'];");
            tFile.AppendLine("//                      }");
            tFile.AppendLine("//                      else");
            tFile.AppendLine("//                      {");
            tFile.AppendLine("//                          $TokenInConflict[] = $tRow['Token'];");
            tFile.AppendLine("//                      }");
            tFile.AppendLine("//                      if ($tRow['Token'] > $LastTokenDate)");
            tFile.AppendLine("//                      {");
            tFile.AppendLine("//                          $LastTokenDate = $tRow['Token'];");
            tFile.AppendLine("//                          $TokenMajor = $tRow['Token'];");
            tFile.AppendLine("//                      }");
            tFile.AppendLine("//                  }");
            tFile.AppendLine("//                  if ($LastTokenDate == $TokenDate)");
            tFile.AppendLine("//                  {");
            tFile.AppendLine("//                          // ok I have the last token but another session is working …");
            tFile.AppendLine("//                      error('RQT93');");
            tFile.AppendLine("//                  }");
            tFile.AppendLine("//                  else");
            tFile.AppendLine("//                  {");
            tFile.AppendLine("//                      error('RQT94');");
            tFile.AppendLine("//                  }");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("// If no token for this UUID : new UUID connexion => valid");
            tFile.AppendLine("// If the token is unique (of course the last) => valid");
            tFile.AppendLine("// If token is not unique => not valid");
            tFile.AppendLine("// If token is the last : error close the other session or delete this session");
            tFile.AppendLine("// If token is not the last : error close the other session");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_REQUEST_TOKEN_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticRescueFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// RESCUE");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("$NWD_TMA = microtime(true);");
            tFile.AppendLine("$TIME_SYNC = $NWD_TMA;");
            tFile.AppendLine("include_once ($PATH_BASE.'/" + Environment + "/" + NWD.K_ENG + "/" + NWD.K_CONSTANTS_FILE + "');");
            tFile.AppendLine("include_once ($PATH_BASE.'/" + Environment + "/" + NWD.K_ENG + "/" + NWD.K_STATIC_ERROR_PHP + "');");
            tFile.AppendLine("include_once ($PATH_BASE.'/" + Environment + "/" + NWD.K_ENG + "/" + NWD.K_STATIC_FUNCTIONS_PHP + "');");
            tFile.AppendLine("include_once ($PATH_BASE.'/" + Environment + "/" + NWD.K_ENG + "/" + NWD.K_STATIC_VALUES_PHP + "');");
            tFile.AppendLine("include_once ($PATH_BASE.'/" + Environment + "/" + NWD.K_DB + "/NWDAccount/" + NWD.K_WS_SYNCHRONISATION + "');");
            tFile.AppendLine("$ereg_email = '/^([A-Z0-9a-z\\.\\_\\%\\+\\-]+@[A-Z0-9a-z\\.\\_\\%\\+\\-]+\\.[A-Za-z]{2,6})$/';");
            tFile.AppendLine("$ereg_password = '/^(.{24,64})$/';");
            tFile.AppendLine("$ereg_emailHash = '/^(.{24,64})$/';");
            tFile.AppendLine("$ereg_lang = '/^([A-Z\\_\\-a-z]{2,7})$/';");
            tFile.AppendLine("$SQL_CON = new mysqli($SQL_HOT, $SQL_USR, $SQL_PSW, $SQL_BSE);");
            tFile.AppendLine("if ($SQL_CON->connect_errno)");
            tFile.AppendLine("{");
            tFile.AppendLine("exit;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if (getValue ('lang', 'lang', $ereg_lang, 'RES02', 'RES12')) // I test emailrescue");
            tFile.AppendLine("{");
            tFile.AppendLine("if (getValue ('s', 's', $ereg_emailHash, 'RES03', 'RES13')) // I test emailrescue");
            tFile.AppendLine("{");
            tFile.AppendLine("if (getValue ('emailrescue', 'emailrescue', $ereg_email, 'RES01', 'RES11')) // I test emailrescue");
            tFile.AppendLine("{");
            tFile.AppendLine("$emailhash = sha1 ($emailrescue.$NWD_SLT_STR);");
            tFile.AppendLine("$tQuery = 'SELECT * FROM `'.$ENV.'_NWDAccount` WHERE `ServerHash` = \\''.$SQL_CON->real_escape_string($s).'\\' AND `Email` = \\''.$SQL_CON->real_escape_string($emailhash).'\\' AND `AC` = 1;';");
            tFile.AppendLine("$tResult = $SQL_CON->query($tQuery);");
            tFile.AppendLine("if (!$tResult)");
            tFile.AppendLine("{");
            tFile.AppendLine("// error('SGN70');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($tResult->num_rows == 0)");
            tFile.AppendLine("{");
            tFile.AppendLine("// unknow user");
            tFile.AppendLine("}");
            tFile.AppendLine("else if ($tResult->num_rows == 1)");
            tFile.AppendLine("{");
            tFile.AppendLine("while($tRow = $tResult->fetch_array())");
            tFile.AppendLine("{");
            tFile.AppendLine("// respondAdd('rescue',true);");
            tFile.AppendLine("// ok I have one user");
            tFile.AppendLine("//TODO: send an email and process to change the password");
            tFile.AppendLine("$tSeed = str_split('ACDEFHJKLMNPRTUVWXY3479'); // and any other characters");
            tFile.AppendLine("shuffle($tSeed); // probably optional since array_is randomized; this may be redundant");
            tFile.AppendLine("$NewPassWord = '';");
            tFile.AppendLine("foreach (array_rand($tSeed, 12) as $k) ");
            tFile.AppendLine("{");
            tFile.AppendLine("$NewPassWord.= $tSeed[$k];");
            tFile.AppendLine("}");
            tFile.AppendLine("$NewPassWordHash = sha1 ($NewPassWord.$NWD_SLT_END);");
            tFile.AppendLine("//$tQueryC = 'UPDATE `'.$ENV.'_NWDAccount` SET `ServerHash` = \\'\\', `Password` = \\''.$NewPassWordHash.'\\', `DM` = \\''.$TIME_SYNC.'\\', `DS` = \\''.$TIME_SYNC.'\\', `'.$ENV.'Sync` = \\''.$TIME_SYNC.'\\' WHERE `Reference` = \\''.$SQL_CON->real_escape_string($tRow['Reference']).'\\' AND `AC` = 1;';");
            tFile.AppendLine("// //echo $tQueryC;");
            tFile.AppendLine("// $tResultC = $SQL_CON->query($tQueryC);");
            tFile.AppendLine("// if (!$tResultC)");
            tFile.AppendLine("// {");
            tFile.AppendLine("//  // error('SGN03');");
            tFile.AppendLine("// }");
            tFile.AppendLine("// IntegrityNWDAccountReevalue ($tRow['Reference']);");
            tFile.AppendLine("$tError = errorReference('ERR-RESCUE-03');");
            tFile.AppendLine("if (isset($tError['Title']))");
            tFile.AppendLine("{");
            tFile.AppendLine("$subject = str_replace(\"{APP}\",$NWD_APP_NAM,GetLocalizableString($tError['Title'], $lang));");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$subject = $NWD_APP_NAM.': password';");
            tFile.AppendLine("}");
            tFile.AppendLine("if (isset($tError['Description']))");
            tFile.AppendLine("{");
            tFile.AppendLine("$message = str_replace(\"{PASSWORD}\",$NewPassWord,str_replace(\"{APP}\",$NWD_APP_NAM,GetLocalizableString($tError['Description'], $lang)));");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$message =\"Your password was resseted to: $NewPassWord\";");
            tFile.AppendLine("}");
            tFile.AppendLine("include('Mail.php');");
            tFile.AppendLine("$headers['From'] = $SMTP_REPLY;");
            tFile.AppendLine("$headers['To'] = $emailrescue;");
            tFile.AppendLine("$headers['Subject'] =$subject;");
            tFile.AppendLine("$params['sendmail_path'] = '/usr/lib/sendmail';");
            tFile.AppendLine("// Create the mail object using the Mail::factory method");
            tFile.AppendLine("$mail_object = Mail::factory('smtp', array ('host' => $SMTP_HOST, ");
            tFile.AppendLine("'auth' => true, ");
            tFile.AppendLine("'username' => $SMTP_USER, ");
            tFile.AppendLine("'password' => $SMTP_PSW));");
            tFile.AppendLine("$mail_object->send($emailrescue, $headers, $message);");
            tFile.AppendLine("$tHTML = errorReference('ERR-RESCUE-02');");
            tFile.AppendLine("?><!DOCTYPE html PUBLIC \" -//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">");
            tFile.AppendLine("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">");
            tFile.AppendLine("<head>");
            tFile.AppendLine("<title><?php");
            tFile.AppendLine("if (isset($tHTML['Title']))");
            tFile.AppendLine("{");
            tFile.AppendLine("echo(str_replace(\"{APP}\",$NWD_APP_NAM,GetLocalizableString($tHTML['Title'], $lang)));");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("echo('Your password was reseted!');");
            tFile.AppendLine("}?></title>");
            tFile.AppendLine("<meta http-equiv=\"Content-Type\" content=\"text / html; charset = UTF - 8\" />");
            tFile.AppendLine("<meta http-equiv=\"Content-Language\" content=\"en\" />");
            tFile.AppendLine("<head>");
            tFile.AppendLine("<body>");
            tFile.AppendLine("<div>");
            tFile.AppendLine("<?php ");
            tFile.AppendLine("if (isset($tHTML['Description']))");
            tFile.AppendLine("{");
            tFile.AppendLine("echo(str_replace(\"{APP}\",$NWD_APP_NAM,GetLocalizableString($tHTML['Description'], $lang)));");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("echo('Your password was reseted!');");
            tFile.AppendLine("}?>");
            tFile.AppendLine("</div>");
            tFile.AppendLine("</body>");
            tFile.AppendLine("</html><?php");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else //or more than one user with this email … strange… I push an error, user must be unique");
            tFile.AppendLine("{");
            tFile.AppendLine("// to much users ...");
            tFile.AppendLine("// error('SGN72');");
            tFile.AppendLine("}");
            tFile.AppendLine("mysqli_free_result($tResult);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else{");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else{");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_RESCUE_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticRespondFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// RESPOND");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("global $TIME_SYNC;");
            tFile.AppendLine("global $TIME_MICRO;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// datas output");
            tFile.AppendLine("$REP;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get timestamp of server compute");
            tFile.AppendLine("$REP['timestamp'] = $TIME_SYNC;");
            tFile.AppendLine("$REP['timemicro'] = $TIME_MICRO;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// add dictionary enter in respond");
            tFile.AppendLine("function respondIsset($sKey)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("return isset($REP[$sKey]);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function respondAdd($sKey, $sValue)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("$REP[$sKey] = $sValue;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function respondRemove($sKey)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("if (isset($REP[$sKey]))");
            tFile.AppendLine("{");
            tFile.AppendLine("unset($REP[$sKey]);");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function respondUUID($sValue)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP, $uuid;");
            tFile.AppendLine("//      $uuid = $sValue;");
            tFile.AppendLine("$REP['uuid'] = $sValue;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function respondToken($sValue)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP, $token;");
            tFile.AppendLine("//      $token = $sValue;");
            tFile.AppendLine("$REP['token'] = $sValue;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function respondNeedReloadData()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("$REP['reloaddatas'] = true;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("function respondNewUser()");
            tFile.AppendLine("{");
            tFile.AppendLine("global $REP;");
            tFile.AppendLine("$REP['newuser'] = true;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_RESPOND_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticStartFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// START");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("$TIME_MICRO = microtime(true); // perhaps use in instance of $TIME_STAMP in sync ");
            tFile.AppendLine("settype($TIME_MICRO, \"float\");");
            tFile.AppendLine("$TIME_SYNC = intval($TIME_MICRO);");
            tFile.AppendLine("settype($TIME_SYNC, \"integer\");");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// use functions library");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_FUNCTIONS_PHP + "');");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// connect MYSQL");
            tFile.AppendLine("$SQL_CON = new mysqli($SQL_HOT,$SQL_USR,$SQL_PSW, $SQL_BSE);");
            tFile.AppendLine("if ($SQL_CON->connect_errno)");
            tFile.AppendLine("{");
            tFile.AppendLine("error('SQL00');");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_FINISH_PHP + "');");
            tFile.AppendLine("exit;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("// analyze request");
            tFile.AppendLine("include_once ('" + NWD.K_STATIC_REQUEST_PHP + "');");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_START_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHP_StaticValuesFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// VALUES");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// datas input");
            tFile.AppendLine("$dico;");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// aes128 Encrypt");
            tFile.AppendLine("function aes128Encrypt($sData, $sKey, $sVector) {");
            tFile.AppendLine("return base64_encode(openssl_encrypt($sData, 'AES-128-ECB', $sKey, OPENSSL_RAW_DATA));");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// aes128 Decrypt");
            tFile.AppendLine("function aes128Decrypt($sData, $sKey, $sVector) {");
            tFile.AppendLine("return openssl_decrypt(base64_decode($sData), 'AES-128-ECB', $sKey, OPENSSL_RAW_DATA);");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// create salt temporal for hash analyze");
            tFile.AppendLine("function saltTemporal($sFrequence, $sIndex) {");
            tFile.AppendLine("if ($sFrequence < 0 || $sFrequence >= 3600)");
            tFile.AppendLine("{");
            tFile.AppendLine("$sFrequence = 600;");
            tFile.AppendLine("}");
            tFile.AppendLine("$unixTime = time()+$sIndex*$sFrequence; // use time() exceptional");
            tFile.AppendLine("return ($unixTime-($unixTime%$sFrequence));");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get value of key in JSON dico and create variable with this name");
            tFile.AppendLine("function paramValue ($varName, $key, $ereg, $errStringIfempty, $errStringifInvalid)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $$varName,$dico;");
            tFile.AppendLine("$return = true;");
            tFile.AppendLine("$$varName = NULL;");
            tFile.AppendLine("$rValue = isset($dico[$key]) ? $dico[$key] : '';// in place of $dico[$key];");
            tFile.AppendLine("if (valueValidity($key, $rValue, $ereg, $errStringIfempty, $errStringifInvalid))");
            tFile.AppendLine("{");
            tFile.AppendLine("$$varName = $rValue;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("return $return;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get POST JSON value by key");
            tFile.AppendLine("function getParams($sKey, $sDigest,$sBase64, $sCrypted) {");
            tFile.AppendLine("global $dico, $NWD_SHA_SEC, $NWD_SHA_VEC, $NWD_SLT_STR, $NWD_SLT_END;");
            tFile.AppendLine("$rReturn = true;");
            tFile.AppendLine("$tParam = isset($_POST[$sKey]) ? $_POST[$sKey] : '';");
            tFile.AppendLine("$tDigest = isset($_POST[$sDigest]) ? $_POST[$sDigest] : '';");
            tFile.AppendLine("if ($tParam!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (sha1($NWD_SLT_STR.$tParam.$NWD_SLT_END) == $tDigest)");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($sCrypted==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tParam = aes128Decrypt( $tParam, $NWD_SHA_SEC, $NWD_SHA_VEC);");
            tFile.AppendLine("if ( $tParam == NULL)");
            tFile.AppendLine("{");
            tFile.AppendLine("errorInfos('PAR97','Data '.$sKey.' is not an json valid!');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($sBase64==true)");
            tFile.AppendLine("{");
            tFile.AppendLine("$tParam = urldecode(base64_decode($tParam));");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("if (!errorDetected())");
            tFile.AppendLine("{");
            tFile.AppendLine("$tDico = json_decode($tParam, true);");
            tFile.AppendLine("if ($tDico == NULL)");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("errorInfos('PAR99','Data '.$sKey.' is not an json valid!');");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$dico = $tDico;");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("errorInfos('PAR98','Digest for '.$sKey.' is false');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$rReturn = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("return $rReturn;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get HEADER value brutal");
            tFile.AppendLine("function headerBrutalValue ($sVarName, $sKey)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $$sVarName;");
            tFile.AppendLine("$$sVarName = isset($_SERVER['HTTP_'.strtoupper($sKey)]) ? $_SERVER['HTTP_'.strtoupper($sKey)] : '';// in place of $_SERVER[$sKey];");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get HEADER value");
            tFile.AppendLine("function headerValue ($sVarName, $sKey, $sEreg, $sErrStringIfempty, $sErrStringifInvalid)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $$sVarName;");
            tFile.AppendLine("$tReturn = true;");
            tFile.AppendLine("$$sVarName = NULL;");
            tFile.AppendLine("$tReturn = isset($_SERVER['HTTP_'.strtoupper($sKey)]) ? $_SERVER['HTTP_'.strtoupper($sKey)] : '';// in place of $_SERVER[$sKey];");
            tFile.AppendLine("if (valueValidity($sKey, $tReturn, $sEreg, $sErrStringIfempty, $sErrStringifInvalid))");
            tFile.AppendLine("{");
            tFile.AppendLine("$$sVarName = $tReturn;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$tReturn = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("return $tReturn;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get POST value");
            tFile.AppendLine("function postValue ($varName, $key, $ereg, $errStringIfempty, $errStringifInvalid)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $$varName;");
            tFile.AppendLine("$return = true;");
            tFile.AppendLine("$$varName = NULL;");
            tFile.AppendLine("$return = isset($_POST[$key]) ? $_POST[$key] : '';// in place of $_POST[$key];");
            tFile.AppendLine("if (valueValidity($key, $return, $ereg, $errStringIfempty, $errStringifInvalid))");
            tFile.AppendLine("{");
            tFile.AppendLine("$$varName = $return;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("return $return;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("// get GET value");
            tFile.AppendLine("function getValue ($varName, $key, $ereg, $errStringIfempty, $errStringifInvalid)");
            tFile.AppendLine("{");
            tFile.AppendLine("global $$varName;");
            tFile.AppendLine("$return = true;");
            tFile.AppendLine("$$varName = NULL;");
            tFile.AppendLine("$return = isset($_GET[$key]) ? $_GET[$key] : '';// in place of $_GET[$key];");
            tFile.AppendLine("if (valueValidity($key, $return, $ereg, $errStringIfempty, $errStringifInvalid))");
            tFile.AppendLine("{");
            tFile.AppendLine("$$varName = $return;");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("}");
            tFile.AppendLine("return $return;");
            tFile.AppendLine("}");
            tFile.AppendLine("// -----------------");
            tFile.AppendLine("// validity of value by ereg");
            tFile.AppendLine("function valueValidity ($key, $value, $ereg, $errStringIfempty, $errStringifInvalid)");
            tFile.AppendLine("{");
            tFile.AppendLine("$return = true;");
            tFile.AppendLine("if ($value == '' && $errStringIfempty != '')");
            tFile.AppendLine("{");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("if ($errStringIfempty != '')");
            tFile.AppendLine("{");
            tFile.AppendLine("errorInfos($errStringIfempty,'Value validity of `'.$key.'` (=`'.$value.'`) is empty and it is not possible');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("else");
            tFile.AppendLine("{");
            tFile.AppendLine("if ($ereg!='' && $errStringifInvalid!='')");
            tFile.AppendLine("{");
            tFile.AppendLine("if (!preg_match ($ereg, $value))");
            tFile.AppendLine("{");
            tFile.AppendLine("$return = false;");
            tFile.AppendLine("if ($errStringifInvalid != '')");
            tFile.AppendLine("{");
            tFile.AppendLine("errorInfos($errStringifInvalid,'Value validity of `'.$key.'` (=`'.$value.'`) is not complicent with regular expression rules');");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("}");
            tFile.AppendLine("return $return;");
            tFile.AppendLine("}");
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_VALUES_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
        private void CreatePHPFlashMyAppFile(Dictionary<string, string> sFilesAndDatas, bool sWriteOnDisk = true)
        {
            //BTBBenchmark.Start();
            // TODO Don't forget to create CSS
            StringBuilder tFile = new StringBuilder(string.Empty);
            tFile.AppendLine("<?php");
            tFile.AppendLine(Headlines());
            tFile.AppendLine("// FLASH MY APP");
            tFile.AppendLine(NWD.K_CommentSeparator);
            // TODO REDIRECT TO FlashMyApp.com!!! AND FINISH FLASHMYAPP.COM
            tFile.AppendLine(NWD.K_CommentSeparator);
            tFile.AppendLine("?>");
            string tFileFormatted = NWDToolbox.CSharpFormat(tFile.ToString());
            sFilesAndDatas.Add(EngFolder(sWriteOnDisk) + NWD.K_STATIC_FLASH_PHP, tFileFormatted);
            //BTBBenchmark.Finish();
        }
        //-------------------------------------------------------------------------------------------------------------
    }
    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
}
//=====================================================================================================================
#endif
